import data
import test

self.expect = test.expect

test.Tester().test(self)

@test.TestClass
class Int64ArrTest {
  @test.Test
  method test_default() {
    arr = data.Int64Array()
    expect(arr.to_arr(), [])
    expect(str(arr), 'Int64Array([])')
  }

  @test.Test
  method test_passed_size() {
    arr = data.Int64Array(5)
    expect(arr.to_arr(), [0, 0, 0, 0, 0])
    expect(str(arr), 'Int64Array([0, 0, 0, 0, 0])')
  }

  @test.Test
  method test_passed_few_values() {
    arr = data.Int64Array([0, 1, 3, 4, 5])
    expect(arr.to_arr(), [0, 1, 3, 4, 5])
    expect(str(arr), 'Int64Array([0, 1, 3, 4, 5])')
  }

  @test.Test
  method test_passed_many_values() {
    arr = data.Int64Array([0, 1, 3, 4, 5, 6, 7, 8, 9])
    expect(arr.to_arr(), [0, 1, 3, 4, 5, 6, 7, 8, 9])
    expect(str(arr), 'Int64Array([0, 1, 3, 4, 5, ...9])')
  }

  @test.Test
  method test_index_range_no_skips() {
    arr = data.Int64Array([0, 1, 3, 4, 5, 6, 7, 8, 9])
    subarr = arr[2:5]
    expect(str(subarr), 'Int64Array([3, 4, 5])')
    expect(subarr.to_arr(), [3, 4, 5])
  }

  @test.Test
  method test_index_range_with_skips() {
    arr = data.Int64Array([0, 1, 3, 4, 5, 6, 7, 8, 9])
    subarr = arr[2:7:2]
    expect(str(subarr), 'Int64Array([3, 5, 7])')
    expect(subarr.to_arr(), [3, 5, 7])
  }

  @test.Test
  method test_index_reverse() {
    arr = data.Int64Array([0, 1, 3, 4, 5, 6, 7, 8, 9])
    subarr = arr[7:2:(-1)]
    expect(str(subarr), 'Int64Array([8, 7, 6, 5, 4])')
    expect(subarr.to_arr(), [8, 7, 6, 5, 4])
  }
  
  @test.Test
  method test_copy() {
    arr = data.Int64Array([0, 1, 3, 4, 5, 6, 7, 8, 9])
    cpy = arr.copy()
    expect(str(cpy), 'Int64Array([0, 1, 3, 4, 5, ...9])')
    expect(cpy.to_arr(), [0, 1, 3, 4, 5, 6, 7, 8, 9])
  }
}
