load("@rules_cc//cc:defs.bzl", "cc_library")

package(
    default_visibility = ["//visibility:public"],
)

cc_library(
    name = "native",
    srcs = ["native.c"],
    hdrs = ["native.h"],
    deps = [
        "//entity",
        "//entity:object",
        "//entity:primitive",
        "//entity/class",
        "//entity/class:classes",
        "//entity/function",
        "//vm/process:processes",
        "@memory_wrapper//debug",
    ],
)

cc_library(
    name = "async",
    srcs = ["async.c"],
    hdrs = ["async.h"],
    deps = [
        ":native",
        "//entity",
        "//entity:object",
        "//entity/class:classes",
        "//heap",
        "//vm:module_manager",
        "//vm/process:processes",
        "//vm/process:task",
        "@memory_wrapper//debug",
    ],
)

cc_library(
    name = "builtin",
    srcs = ["builtin.c"],
    hdrs = ["builtin.h"],
    deps = [
        ":error",
        ":native",
        "//entity",
        "//entity:object",
        "//entity:primitive",
        "//entity/array",
        "//entity/class",
        "//entity/class:classes",
        "//entity/function",
        "//entity/string",
        "//entity/string:string_helper",
        "//entity/tuple",
        "//heap",
        "//vm",
        "//vm:module_manager",
        "//vm/process:processes",
        "//vm/process:task",
        "@file_utils//util/file:file_info",
        "@memory_wrapper//alloc/arena:intern",
        "@memory_wrapper//debug",
        "@memory_wrapper//struct:map",
        "@memory_wrapper//struct:struct_defaults",
        "@memory_wrapper//util",
    ],
)

cc_library(
    name = "io",
    srcs = ["io.c"],
    hdrs = ["io.h"],
    deps = [
        ":error",
        ":native",
        "//entity",
        "//entity:object",
        "//entity:primitive",
        "//entity/array",
        "//entity/class",
        "//entity/class:classes",
        "//entity/function",
        "//entity/string",
        "//entity/string:string_helper",
        "//entity/tuple",
        "//vm:module_manager",
        "//vm/process:processes",
        "@file_utils//util/file:file_util",
        "@memory_wrapper//alloc/arena:intern",
        "@memory_wrapper//debug",
    ],
)

cc_library(
    name = "error",
    srcs = ["error.c"],
    hdrs = ["error.h"],
    deps = [
        ":native",
        "//entity",
        "//entity:object",
        "//entity:primitive",
        "//entity/array",
        "//entity/class",
        "//entity/class:classes",
        "//entity/function",
        "//entity/string",
        "//entity/string:string_helper",
        "//entity/tuple",
        "//vm:module_manager",
        "//vm/process:processes",
        "//vm/process:task",
        "@memory_wrapper//alloc/arena:intern",
        "@memory_wrapper//debug",
    ],
)

cc_library(
    name = "math",
    srcs = ["math.c"],
    hdrs = ["math.h"],
    deps = [
        ":error",
        ":native",
        "//entity",
        "//entity:object",
        "//entity:primitive",
        "//entity/class",
        "//entity/class:classes",
        "//entity/tuple",
        "//vm:module_manager",
        "//vm/process:processes",
        "@memory_wrapper//alloc/arena:intern",
        "@memory_wrapper//debug",
    ],
)

cc_library(
    name = "classes",
    srcs = ["classes.c"],
    hdrs = ["classes.h"],
    deps = [
        ":error",
        "//entity",
        "//entity:object",
        "//entity/class",
        "//entity/class:classes",
        "//entity/string",
        "//entity/tuple",
        "//heap",
        "//lang/parser",
        "//lang/semantics",
        "//struct:keyed_list",
        "//vm",
        "//vm:module_manager",
        "//vm/process:processes",
        "@file_utils//util/file:file_info",
        "@memory_wrapper//alloc/arena:intern",
        "@memory_wrapper//debug",
        "@memory_wrapper//struct:map",
        "@memory_wrapper//struct:struct_defaults",
    ],
)

cc_library(
    name = "process",
    srcs = ["process.c"],
    hdrs = ["process.h"],
    deps = [
        ":error",
        "//entity",
        "//entity:object",
        "//entity/class",
        "//entity/class:classes",
        "//entity/string",
        "//entity/tuple",
        "//heap",
        "//util/sync:thread",
        "//vm",
        "//vm:intern",
        "//vm:module_manager",
        "//vm/process",
        "//vm/process:context",
        "//vm/process:processes",
        "@memory_wrapper//alloc/arena:intern",
        "@memory_wrapper//debug",
        "@memory_wrapper//struct:map",
        "@memory_wrapper//struct:struct_defaults",
    ],
)

cc_library(
    name = "socket",
    srcs = ["socket.c"],
    hdrs = ["socket.h"],
    deps = [
        "//entity",
        "//entity:object",
        "//entity/array",
        "//entity/class:classes",
        "//entity/native",
        "//entity/native:error",
        "//entity/string",
        "//entity/string:string_helper",
        "//entity/tuple",
        "//util:socket",
        "//vm:module_manager",
        "//vm/process:processes",
        "@memory_wrapper//alloc/arena:intern",
    ],
)
