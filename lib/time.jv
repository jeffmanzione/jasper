
self.MILLIS_PER_SECOND = 1000
self.NANOS_PER_MILLIS = 1000

class Timer {
  field start_usec, timestamps
  method reset() {
    start_usec = 0
    timestamps = []
  }
  method start() {
    reset()
    start_usec = now_usec()
  }
  method mark(mark_name) {
    elapsed = now_usec() - start_usec
    timestamps.append((mark_name, elapsed))
    return elapsed
  }
  method elapsed_usec() {
    return timestamps
  }
}

class Timestamp {
  new(field year,
      field month,
      field day_of_month,
      field hour,
      field minute,
      field second,
      field millisecond) {}

  method to_s() {
    cat(year, '-', month, '-', day_of_month, 'T',
        hour, ':', minute, ':', second,
        '.', millisecond, 'Z')
  }
}

def millis_to_timestamp(millis_since_epoch) {
  Timestamp(__millis_to_timestamp(millis_since_epoch))
}

def now() {
  millis_to_timestamp(now_usec() / 1000)
}