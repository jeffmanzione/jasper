import io
import async

@async.RemoteClass
class Test {
  field count, completer
  
  new() {
    count = 0
    completer = async.Completer()
  }

  method inc_count() {
    count = count + 1
    return count
  }

  method complete() {
    completer.complete()
  }

  method to_s() {
    'Test(' + str(count) + ')'
  }

  method run() {
    await completer.as_future()
  }
}

io.println(RemoteTest, Test.module().$get(cat('Remote' + Test.name())))

;remote = async.create_remote(Test, 'hello')
;future = remote.start()

;await async.all([
;    remote.inc_count(),
;    remote.inc_count(),
;    remote.inc_count()])

;io.println(await remote.to_s())

;remote.complete()

;await future
